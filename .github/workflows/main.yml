name: GitHub Actions Demo
run-name: ${{ github.actor }} is testing out GitHub Actions 🚀

on: [push]

jobs:
  Explore-GitHub-Actions:
    runs-on: ubuntu-latest
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🐧 This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "🔎 The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Checkout repository code
      - name: Check out repository code
        uses: actions/checkout@v4
      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      # Set up JDK (Java Development Kit)
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # Create lib directory and download dependencies
      - name: Set up dependencies
        run: |
          mkdir -p lib
          wget https://repo1.maven.org/maven2/junit/junit/4.13.2/junit-4.13.2.jar -P lib/
          wget https://repo1.maven.org/maven2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar -P lib/

      # Create build directories
      - name: Create build directories
        run: |
          mkdir -p build/classes
          mkdir -p build/test

      # Compile main classes
      - name: Compile Java code
        run: |
          javac -d build/classes -cp "lib/*:." $(find src/main -name "*.java")

      # Compile test classes
      - name: Compile test classes
        run: |
          javac -d build/test -cp "lib/*:build/classes:." $(find src/test -name "*.java")

      # Run JUnit tests
      - name: Run JUnit tests
        run: |
          java -cp "lib/*:build/classes:build/test" org.junit.runner.JUnitCore test.DisasterEventTest

      - run: echo "🍏 This job's status is ${{ job.status }}."